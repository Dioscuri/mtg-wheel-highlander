// Using express.js as the router
const express = require("express");
const routes = express.Router();
 
// This will help us connect to the database
const dbo = require("../database/connection");
 
// This help convert the id from string to ObjectId for the _id.
const ObjectId = require("mongodb").ObjectId;
 
 
// This section will help you get a list of all the records.

// DECK ROUTES
routes.route("/decks").get(function (req, res) {
 let db_connect = dbo.getDb("mtgWheelHighlander");

 try {
    db_connect
      .collection("decks")
      .find({})
      .toArray()
      .then((data) => {
        console.log(data);
        res.json(data)
      });
  }
  catch (e){
    console.error("Error pulling decks: ", e)
  }
});

// A deck consists of the following fields:
// name: deck_name
// id: deck_id (autogenerated), don't need to pass in to create a deck
// user: deck_owner
// cards: [card_id's]

routes.route("/decks/add").post(function (req, response) {
  let db_connect = dbo.getDb();
  let myobj = {
    name: req.body.deck_name,
    cards: []
    // wheels: req.body.wheel,
    //user: req.body.user_name
  };

  console.log("/decks/add", req.body)

  try {
    db_connect
    .collection("decks")
    .insertOne(myobj)
    .then((data) => {
      console.log(data);
      response.json(data)
    });

  }
  catch (e){
    console.error("Error creating deck: ", e)
  }
  

 });
 
/*// This section will help you get a single record by id
routes.route("/record/:id").get(function (req, res) {
 let db_connect = dbo.getDb();
 let myquery = { _id: ObjectId(req.params.id) };
 db_connect
   .collection("records")
   .findOne(myquery, function (err, result) {
     if (err) throw err;
     res.json(result);
   });
});
 
// This section will help you update a record by id.
routes.route("/update/:id").post(function (req, response) {
 let db_connect = dbo.getDb();
 let myquery = { _id: ObjectId(req.params.id) };
 let newvalues = {
   $set: {
     name: req.body.name,
     position: req.body.position,
     level: req.body.level,
   },
 };
 db_connect
   .collection("records")
   .updateOne(myquery, newvalues, function (err, res) {
     if (err) throw err;
     console.log("1 document updated");
     response.json(res);
   });
});
 
// This section will help you delete a record
routes.route("/:id").delete((req, response) => {
 let db_connect = dbo.getDb();
 let myquery = { _id: ObjectId(req.params.id) };
 db_connect.collection("records").deleteOne(myquery, function (err, obj) {
   if (err) throw err;
   console.log("1 document deleted");
   response.json(obj);
 });
});*/
 
module.exports = routes;